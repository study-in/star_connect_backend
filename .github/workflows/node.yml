# .github/workflows/node.yml
# Basic GitHub Actions workflow for Node.js CI

name: Node.js CI

on:
  push:
    branches: [ "main", "master", "develop" ] # Trigger on pushes to these branches
  pull_request:
    branches: [ "main", "master", "develop" ] # Trigger on pull requests to these branches

jobs:
  build_and_test:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    strategy:
      matrix:
        node-version: [18.x, 20.x] # Test against multiple Node.js versions (LTS recommended)

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Use latest version

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm' # Enable caching for npm dependencies

    - name: Install dependencies
      run: npm ci # Use ci for faster, reliable installs in CI

    - name: Build TypeScript
      run: npm run build --if-present # Run build script if it exists

    - name: Run linters
      run: npm run lint --if-present # Run lint script if it exists

    - name: Run Prettier check
      run: npm run prettier --if-present # Run prettier check if it exists

    - name: Run tests (if configured)
      run: npm test --if-present # Run test script if it exists
      # env: # Pass environment variables needed for tests (use GitHub secrets for sensitive data)
      #   CI: true
      #   MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
      #   JWT_SECRET: ${{ secrets.TEST_JWT_SECRET }}

    # --- Optional: Deployment Step (Example for Vercel) ---
    # - name: Deploy to Vercel (only on main branch push)
    #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #   uses: amondnet/vercel-action@v25 # Or official Vercel action
    #   with:
    #     vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
    #     vercel-org-id: ${{ secrets.VERCEL_ORG_ID }} # Required
    #     vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }} # Required
    #     vercel-args: '--prod' # Deploy to production
